//#include <Adafruit_PWMServoDriver.h>
#include <pwmservo.h>
//#include <Adafruit_ADS1015.h>
#include <AltSoftSerial.h>
#include <Arduino.h>
#include <Wire.h>

AltSoftSerial BLEMini;  

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
//Adafruit_ADS1115 ads;

unsigned char ACK[6] = "ACK\r\n";

void command (char c) {
  Serial.println ( "command method called" );
      
  if ( c >= '0' && c <= '9') {
  
      Serial.print ( "PWM15 set to [" );
      BLEMini.print ( "PWM15 set to [" );
      
    uint16_t val = map ( c, '0', '9', 4095, 0 );
    
    if (val == 0) {
        // Special value for signal fully on.
        pwm.setPWM(15, 0, 4096);
        Serial.print ( "max" );
        BLEMini.print ( "max" );
      }
      else if (val == 4095) {
        // Special value for signal fully off.
        pwm.setPWM(15, 4096, 0);
        Serial.print ( "min" );
        BLEMini.print ( "min" );
      }
      else {
        pwm.setPWM(15, 0, val);
        Serial.print ( val );
        BLEMini.print ( val );
      }
      
      Serial.println ( "]\r\n" );
      BLEMini.println ( "]\r\n" );
  }
  /* 
  else if ( c == 'r' ) {
    
    Wire.beginTransmission(40);
    Wire.write(15);
    Wire.endTransmission();
  
    Wire.requestFrom((uint8_t) 40, (uint8_t) 1);
    
    char buffer[20];
    
    snprintf ( buffer, 20, "value of PWM15 [%d]\r\n", Wire.read() );

    Serial.println ( buffer );
  }
  */
}

void setup()
{
  Serial.begin( 57600 );
  
  //Wire.begin();
  
  pwm.begin();
  pwm.setPWMFreq( 100 );  // This is the maximum PWM frequency

  // save I2C bitrate
  //uint8_t twbrbackup = TWBR;
  // must be changed after calling Wire.begin() (inside pwm.begin())
  //TWBR = 12; // upgrade to 400KHz!

  pwm.setPWM(15, 4096, 0);
  
  BLEMini.begin(57600); 
  
  Serial.println("init [done]");
}

void loop()
{
  
  if ( BLEMini.available() ) {
      delay(5);
    
      while ( BLEMini.available() ) {
        Serial.println ( "received data via bluetooth");
        char c = (char)BLEMini.read();
        command ( c );
      }
  }
  /* 
  int16_t adc0 = ads.readADC_SingleEnded(0);
  BLEMini.print("AIN0: ");
  BLEMini.println(adc0);
  */
  
  delay (500);
}

void serialEvent() {
  while (Serial.available()) {
    char c = (char)Serial.read();
    command(c);
  }
}
