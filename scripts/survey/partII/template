PART="partII"
PARTICIPANT_NUMBER="$1"
START_SEQUENCE_NUMBER="$3"
SEQUENCE_NUMBER="0"

source config

PARAMETER="255"

INTENSITY1="0"
INTERVAL1="0"
INTENSITY2="0"
INTERVAL2="0"

SHOW_VALUES="yes"

function readSequenceNumber {
  if [ -e $SEQUENCE_FILE ]; then
    SEQUENCE_NUMBER=$(cat $SEQUENCE_FILE)
  else
    SEQUENCE_NUMBER="0"
  fi
}

function incSequenceNumber {
  let SEQUENCE_NUMBER+=1
  echo $SEQUENCE_NUMBER > $SEQUENCE_FILE
}

function loadIntensity {
  declare -a 'values=('"$1"')'
  #eval values=($1)
  INTENSITY1=${values[0]}
  INTERVAL1=${values[1]}
  INTENSITY2=${values[2]}
  INTERVAL2=${values[3]}
}

function applyValues {
  echo "sm $ACTUATOR $ACTUATOR_MODE six/0.1" > $PORT
  echo "sp $ACTUATOR $PARAMETER six/0.1" > $PORT

  if [ "$1" == "showValues" ]; then
    echo "Intensity: $INTENSITY1" > $TTY
  else
    echo "#$SEQUENCE_NUMBER" > $TTY
  fi

  echo "si $ACTUATOR $INTENSITY1 six/0.1" > $PORT
  sleep "$INTERVAL1"


  if [ "$1" == "showValues" ]; then
    echo "Intensity: $INTENSITY2" > $TTY
  fi

  echo "si $ACTUATOR $INTENSITY2 six/0.1" > $PORT
  sleep "$INTERVAL2"

  echo "sm $ACTUATOR OFF six/0.1" > $PORT
}

function printResolution {
  RESOLUTION=$(sed -ne 's/.*_\([0-9]*\).txt/\1/p' <<< $1)

  if [ -n "$RESOLUTION" ]; then
    echo "you will feel a resolution of $RESOLUTION now"
  fi
}

function runBatchFile {
  while read -u 6 line; do
    loadIntensity "$line"

    readSequenceNumber

    if [ -z $START_SEQUENCE_NUMBER ] || [ "$START_SEQUENCE_NUMBER" -le "$SEQUENCE_NUMBER" ]; then
      applyValues $1

      if [ "$1" == "test" ]; then
        echo "please enter the intensity levels you felt"
        read -p "first value: " firstValue  < $TTY
        read -p "second value: " secondValue < $TTY

        echo "#$SEQUENCE_NUMBER { correct :" $INTENSITY1 "to" $INTENSITY2 "}" >> $STATISTIC_LOG
        echo -e "#$SEQUENCE_NUMBER { guessed:" $firstValue "to" $secondValue "}\n" >> $STATISTIC_LOG
      fi

      echo -e "\n"
      read -n1 -p "press a key to continue" start < $TTY
      echo -e "\n"
    fi

    if [ "$1" == "test" ]; then
      incSequenceNumber
    fi
  done 6<$2
}

function runStatistic {
  echo -e "$ACTUATOR_TYPE" >> $STATISTIC_LOG
  echo "-------------------------------------" >> $STATISTIC_LOG

  echo -e "\ncalibration phase: you will feel two stimulation  levels"
  echo -e "    of the actuator. The values will appear accordingly.\n"
  read -n1 -p "press any key to start" start
  echo -e "\n"

  for CALIBRATE_FILE in execution/$ACTUATOR_TYPE/calibrate*.txt; do
    printResolution $CALIBRATE_FILE
    runBatchFile "showValues" $CALIBRATE_FILE
  done

  echo -e "\ntest phase: please first try to  feel the start  and end"
  echo "        level of stimmulation, then enter the values you"
  echo -e "        think you have felt.\n"
  read -n1 -p "press any key to start" start
  echo -e "\n"

  for TEST_FILE in execution/$ACTUATOR_TYPE/test*.txt; do
    printResolution $TEST_FILE
    runBatchFile "test" $TEST_FILE
  done
}
